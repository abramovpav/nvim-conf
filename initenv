#!/bin/bash
export PROJECT_NAME=$1
export PROJECT_PYTHON_IMAGE=$2


# Installing pyenv & pyenv virtualenv
brew install pyenv
_1='export PYENV_ROOT=/usr/local/opt/pyenv'
eval $_1
PYENV_VIRTUALENV_DIR=$(pyenv root)/plugins/pyenv-virtualenv
if [ ! -d "$PYENV_VIRTUALENV_DIR" ]
then 
	git clone https://github.com/pyenv/pyenv-virtualenv.git $PYENV_VIRTUALENV_DIR
fi

_2='eval "$(pyenv init -)"'
_3='eval "$(pyenv virtualenv-init -)"'
if grep -Fxq "$_1" ~/.bash_profile
then 
	echo "pyenv already initialized"
else
	echo -e $_1 >> ~/.bash_profile 
	echo -e $_2 >> ~/.bash_profile 
	eval "$_1"
	eval "$_2"
	echo "pyenv initialized"
fi

if grep -Fxq "$_3" ~/.bash_profile
then 
	echo "pyenv virtualenv already initialized"
else
	echo -e $_3 >> ~/.bash_profile 
	eval "$_3"
	echo "pyenv virtualenv initialized"
fi


# Identifying python version and sitepackages path
GET_PYTHON_SITEPACKAGES_PATH='python -c "import site; print([p for p in site.getsitepackages() if \"site-packages\" in p][0])"'
GET_PYTHON_VERSION='python -c "import sys; print(sys.version.split()[0])"'
CONTAINER_PYTHON_VERSION=$(docker run --rm --name=tmp_for_pyenv --entrypoint=bash "${PROJECT_PYTHON_IMAGE}" -c "${GET_PYTHON_VERSION}")
echo "identified python version ${CONTAINER_PYTHON_VERSION}"
CONTAINER_SITEPACKAGES=$(docker run --rm --name=tmp_for_pyenv --entrypoint=bash "${PROJECT_PYTHON_IMAGE}" -c "${GET_PYTHON_SITEPACKAGES_PATH}")
echo "in-docker sitepackages path ${CONTAINER_SITEPACKAGES}"


# Setting up python & virtualenv
existing_env=$(pyenv prefix $PROJECT_NAME)
if [ $? -eq 0 ]
then 
	echo "dropping existing virtualenv $existing_env"
	pyenv virtualenv-delete -f $PROJECT_NAME
fi
pyenv install -s $CONTAINER_PYTHON_VERSION
pyenv rehash
pyenv virtualenv $CONTAINER_PYTHON_VERSION $PROJECT_NAME

existing_env=$(pyenv prefix $PROJECT_NAME)
env_site_packages_path=$(eval "$existing_env/bin/${GET_PYTHON_SITEPACKAGES_PATH}")
echo "Re-created virtual env $existing_env $env_site_packages_path"


echo "Copying site packages"
id=$(docker create $PROJECT_PYTHON_IMAGE)
docker cp $id:$CONTAINER_SITEPACKAGES/. $env_site_packages_path
docker rm -v $id


echo "Installing Nvim deps"
$existing_env/bin/pip3 install pynvim \
	python-language-server \
	pylint \
	pylint-django \
	pyls-black \
	pyls-isort
$existing_env/bin/pip3 install -U greenlet

echo "Create executable nvim with python binary set"
AUTOGEN_SCRIPTS_DIR="${PWD}/autogen_scripts"
SCRIPT_NAME="nvim_${PROJECT_NAME}"
SCRIPT_PATH="${AUTOGEN_SCRIPTS_DIR}/${SCRIPT_NAME}"

mkdir -p $AUTOGEN_SCRIPTS_DIR
echo "#!/bin/bash
source $existing_env/bin/activate && nvim \$@" > "$SCRIPT_PATH"
chmod 0777 "$SCRIPT_PATH"
ln -sf $SCRIPT_PATH "/usr/local/bin/${SCRIPT_NAME}"
echo $SCRIPT_NAME
